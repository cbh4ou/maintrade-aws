type Metrics @aws_iam @aws_cognito_user_pools @aws_api_key {
  id: ID!
  risk: Float
  momentum: String
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  owner: String
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelMetricsConnection @aws_api_key @aws_iam @aws_cognito_user_pools {
  items: [Metrics]
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

input ModelMetricsFilterInput {
  id: ModelIDInput
  risk: ModelFloatInput
  momentum: ModelStringInput
  and: [ModelMetricsFilterInput]
  or: [ModelMetricsFilterInput]
  not: ModelMetricsFilterInput
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

type Query {
  getMetrics(id: ID!): Metrics @aws_api_key @aws_iam @aws_cognito_user_pools
  listMetricss(filter: ModelMetricsFilterInput, limit: Int, nextToken: String): ModelMetricsConnection @aws_api_key @aws_iam @aws_cognito_user_pools
  syncMetrics(filter: ModelMetricsFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelMetricsConnection @aws_api_key @aws_iam @aws_cognito_user_pools
}

input CreateMetricsInput {
  id: ID
  risk: Float
  momentum: String
  _version: Int
}

input UpdateMetricsInput {
  id: ID!
  risk: Float
  momentum: String
  _version: Int
}

input DeleteMetricsInput {
  id: ID!
  _version: Int
}

type Mutation {
  createMetrics(input: CreateMetricsInput!, condition: ModelMetricsConditionInput): Metrics @aws_api_key @aws_iam @aws_cognito_user_pools
  updateMetrics(input: UpdateMetricsInput!, condition: ModelMetricsConditionInput): Metrics @aws_api_key @aws_iam @aws_cognito_user_pools
  deleteMetrics(input: DeleteMetricsInput!, condition: ModelMetricsConditionInput): Metrics @aws_api_key @aws_iam @aws_cognito_user_pools
}

input ModelMetricsConditionInput {
  risk: ModelFloatInput
  momentum: ModelStringInput
  and: [ModelMetricsConditionInput]
  or: [ModelMetricsConditionInput]
  not: ModelMetricsConditionInput
}

type Subscription {
  onCreateMetrics(owner: String): Metrics @aws_subscribe(mutations: ["createMetrics"]) @aws_api_key @aws_iam @aws_cognito_user_pools
  onUpdateMetrics(owner: String): Metrics @aws_subscribe(mutations: ["updateMetrics"]) @aws_api_key @aws_iam @aws_cognito_user_pools
  onDeleteMetrics(owner: String): Metrics @aws_subscribe(mutations: ["deleteMetrics"]) @aws_api_key @aws_iam @aws_cognito_user_pools
}
